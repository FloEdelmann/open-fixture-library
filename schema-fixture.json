{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/FloEdelmann/open-fixture-library/master/schema-fixture.json",

  "version": "4.0.1",

  "definitions": {
    "nonEmptyString": {
      "type": "string",
      "pattern": "^[^\n]+$"
    },
    "noVariablesString": {
      "type": "string",
      "pattern": "^[^$\n]+$"
    },
    "variablePixelKeyString": {
      "type": "string",
      "pattern": "\\$pixelKey"
    },
    "nonEmptyMultilineString": {
      "type": "string",
      "minLength": 1
    },
    "modeNameString": {
      "allOf": [
        { "$ref": "#/definitions/nonEmptyString" },
        { "pattern": "^((?!mode)(?!Mode).)*$" }
      ]
    },
    "urlString": {
      "type": "string",
      "pattern": "^(ftp|http|https):\\/\\/[^ \"]+$"
    },
    "isoDateString": {
      "type": "string",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
    },
    "colorString": {
      "type": "string",
      "pattern": "^#[0-9a-f]{6}$"
    },
    "dmxValue": {
      "type": "integer",
      "minimum": 0,
      "$comment": "maximum depends on how many fine channels there are (255 if none, 65535 if one, etc.)"
    },
    "dimensionsXYZ": {
      "$comment": "width, height, depth (in mm)",
      "type": "array",
      "minItems": 3,
      "maxItems": 3,
      "items": {
        "type": "number",
        "minimum": 0
      }
    }
  },

  "type": "object",
  "properties": {
    "name": {
      "$comment": "unique in manufacturer",
      "$ref": "#/definitions/nonEmptyString"
    },
    "shortName": {
      "$comment": "unique globally; if not set: use name",
      "$ref": "#/definitions/nonEmptyString"
    },
    "categories": {
      "type": "array",
      "$comment": "most important category first",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "enum": [
          "Blinder",
          "Color Changer",
          "Dimmer",
          "Effect",
          "Fan",
          "Flower",
          "Hazer",
          "Laser",
          "Matrix",
          "Moving Head",
          "Scanner",
          "Smoke",
          "Strobe",
          "Other"
        ]
      }
    },
    "meta": {
      "type": "object",
      "properties": {
        "authors": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/nonEmptyString" }
        },
        "createDate": { "$ref": "#/definitions/isoDateString" },
        "lastModifyDate": { "$ref": "#/definitions/isoDateString" },
        "importPlugin": {
          "type": "object",
          "properties": {
            "plugin": { "$ref": "#/definitions/nonEmptyString" },
            "date": { "$ref": "#/definitions/isoDateString" },
            "comment": { "$ref": "#/definitions/nonEmptyMultilineString" }
          },
          "required": ["plugin", "date"],
          "additionalProperties": false
        }
      },
      "required": ["authors", "createDate", "lastModifyDate"],
      "additionalProperties": false
    },
    "comment": { "$ref": "#/definitions/nonEmptyMultilineString" },
    "manualURL": { "$ref": "#/definitions/urlString" },
    "rdm": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535
        },
        "softwareVersion": { "$ref": "#/definitions/nonEmptyString" }
      },
      "required": ["modelId"],
      "additionalProperties": false
    },
    "physical": {
      "type": "object",
      "minProperties": 1,
      "properties": {
        "dimensions": {
          "$ref": "#/definitions/dimensionsXYZ"
        },
        "weight": {
          "$comment": "in kg",
          "type": "number",
          "exclusiveMinimum": 0
        },
        "power": {
          "$comment": "in W",
          "type": "number",
          "exclusiveMinimum": 0
        },
        "DMXconnector": {
          "$comment": "additions are welcome",
          "enum": [
            "3-pin",
            "5-pin",
            "3-pin (swapped +/-)",
            "3-pin and 5-pin",
            "3-pin XLR IP65",
            "3.5mm stereo jack"
          ]
        },
        "bulb": {
          "type": "object",
          "minProperties": 1,
          "properties": {
            "type": {
              "$comment": "e.g. 'LED'",
              "$ref": "#/definitions/nonEmptyString"
            },
            "colorTemperature": {
              "$comment": "in K",
              "type": "number",
              "exclusiveMinimum": 0
            },
            "lumens": {
              "type": "number",
              "exclusiveMinimum": 0
            }
          },
          "additionalProperties": false
        },
        "lens": {
          "type": "object",
          "minProperties": 1,
          "properties": {
            "name": {
              "$comment": "e.g. 'PC', 'Fresnel'",
              "$ref": "#/definitions/nonEmptyString"
            },
            "degreesMinMax": {
              "type": "array",
              "minItems": 2,
              "maxItems": 2,
              "items": {
                "type": "number",
                "minimum": 0,
                "maximum": 360
              }
            }
          },
          "additionalProperties": false
        },
        "focus": {
          "type": "object",
          "minProperties": 1,
          "properties": {
            "type": {
              "$comment": "additions are welcome",
              "enum": [
                "Fixed",
                "Head",
                "Mirror",
                "Barrel"
              ]
            },
            "panMax": {
              "$comment": "in degrees",
              "type": "number",
              "minimum": 0
            },
            "tiltMax": {
              "$comment": "in degrees",
              "type": "number",
              "minimum": 0
            }
          },
          "additionalProperties": false
        },
        "matrixPixels": {
          "type": "object",
          "properties": {
            "dimensions": { "$ref": "#/definitions/dimensionsXYZ" },
            "spacing": { "$ref": "#/definitions/dimensionsXYZ" }
          },
          "required": ["dimensions", "spacing"]
        }
      },
      "additionalProperties": false
    },
    "matrix": {
      "type": "object",
      "properties": {
        "pixelCount": {
          "$comment": "amount of pixels in X, Y and Z directions",
          "type": "array",
          "minItems": 3,
          "maxItems": 3,
          "items": {
            "type": "integer",
            "minimum": 1
          }
        },
        "pixelKeys": {
          "$comment": "pixelKeys in a structure of arrays for the Z, Y and X directions",
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "array",
              "minItems": 1,
              "items": {
                "oneOf": [
                  { "$ref": "#/definitions/noVariablesString" },
                  { "type": "null" }
                ]
              }
            }
          }
        },
        "pixelGroups": {
          "type": "object",
          "minProperties": 1,
          "propertyNames": {
            "$comment": "pixel group keys",
            "$ref": "#/definitions/noVariablesString"
          },
          "additionalProperties": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "$ref": "#/definitions/noVariablesString"
            }
          }
        }
      },
      "oneOf": [
        { "required": ["pixelCount"] },
        { "required": ["pixelKeys"] }
      ],
      "additionalProperties": false
    },
    "availableChannels": {
      "type": "object",
      "minProperties": 1,
      "propertyNames": {
        "$comment": "channel keys",
        "$ref": "#/definitions/noVariablesString"
      },
      "additionalProperties": {
        "type": "object",
        "properties": {
          "name": {
            "$comment": "if not set: use channel key",
            "$ref": "#/definitions/nonEmptyString"
          },
          "type": {
            "enum": [
              "Intensity",
              "Single Color",
              "Multi-Color",
              "Pan",
              "Tilt",
              "Focus",
              "Zoom",
              "Iris",
              "Gobo",
              "Prism",
              "Shutter",
              "Strobe",
              "Speed",
              "Color Temperature",
              "Effect",
              "Fog",
              "Maintenance",
              "Nothing"
            ]
          },
          "color": {
            "enum": [
              "Red",
              "Green",
              "Blue",
              "Cyan",
              "Magenta",
              "Yellow",
              "Amber",
              "White",
              "UV",
              "Lime",
              "Indigo"
            ]
          },
          "fineChannelAliases": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                { "$ref": "#/definitions/noVariablesString" },
                {
                  "$ref": "#/definitions/variablePixelKeyString",
                  "$comment": "only in template channels"
                }
              ]
            }
          },
          "defaultValue": { "$ref": "#/definitions/dmxValue" },
          "highlightValue": { "$ref": "#/definitions/dmxValue" },
          "invert": { "type": "boolean" },
          "constant": { "type": "boolean" },
          "crossfade": { "type": "boolean" },
          "precedence": { "enum": ["LTP", "HTP"] },
          "capabilities": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "range": {
                  "type": "array",
                  "minItems": 2,
                  "maxItems": 2,
                  "items": { "$ref": "#/definitions/dmxValue" }
                },
                "name": { "$ref": "#/definitions/nonEmptyString" },
                "menuClick": { "enum": ["start", "center", "end", "hidden"] },
                "color": { "$ref": "#/definitions/colorString" },
                "color2": { "$ref": "#/definitions/colorString" },
                "image": { "$ref": "#/definitions/nonEmptyString" },
                "switchChannels": {
                  "type": "object",
                  "minProperties": 1,
                  "propertyNames": {
                    "$comment": "switching channel alias keys",
                    "oneOf": [
                      { "$ref": "#/definitions/noVariablesString" },
                      { "$ref": "#/definitions/variablePixelKeyString" }
                    ]
                  },
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "$comment": "channel key or channel alias key",
                        "$ref": "#/definitions/noVariablesString"
                      },
                      {
                        "$comment": "template channel key or template channel alias key",
                        "$ref": "#/definitions/variablePixelKeyString"
                      }
                    ]
                  }
                }
              },
              "dependencies": {
                "color2": ["color"]
              },
              "not": {
                "allOf": [
                  { "required": ["color"] },
                  { "required": ["image"] }
                ]
              },
              "required": ["range", "name"],
              "additionalProperties": false
            }
          }
        },
        "required": ["type"],
        "allOf": [
          {
            "if": {
              "properties": { "type": { "enum": ["Single Color"] } }
            },
            "then": {
              "required": ["type", "color"]
            },
            "else": {
              "$comment": "color property is forbidden",
              "oneOf": [
                { "required": ["type"] },
                { "required": ["type", "color"] }
              ]
            }
          },
          {
            "if": {
              "properties": { "type": { "enum": [ "Nothing" ] } }
            },
            "then": {
              "oneOf": [
                {
                  "maxProperties": 1,
                  "required": [ "type" ]
                },
                {
                  "maxProperties": 2,
                  "required": [ "name", "type" ]
                }
              ]
            }
          },
          {
            "if": {
              "$comment": "one capability sets switchChannels",
              "properties": {
                "capabilities": {
                  "contains": {
                    "required": ["switchChannels"]
                  }
                }
              },
              "required": ["capabilities"]
            },
            "then": {
              "$comment": "defaultValue must be set and all capabilities have to set switchChannels",
              "required": ["defaultValue"],
              "properties": {
                "capabilities": {
                  "items": {
                    "required": ["switchChannels"]
                  }
                }
              }
            }
          },
          {
            "if": {
              "not": { "properties": { "type": { "enum": [ "Multi-Color", "Effect", "Gobo" ] } } }
            },
            "then": {
              "$comment": "capabilities may not set color or image properties",
              "properties": {
                "capabilities": {
                  "items": {
                    "oneOf": [
                      { "required": ["name"] },
                      { "required": ["color"] },
                      { "required": ["image"] }
                    ]
                  }
                }
              }
            }
          }
        ],
        "additionalProperties": false
      }
    },
    "templateChannels": {
      "type": "object",
      "minProperties": 1,
      "propertyNames": {
        "$comment": "template channel keys",
        "$ref": "#/definitions/variablePixelKeyString"
      },
      "additionalProperties": { "$ref": "#/properties/availableChannels/additionalProperties" }
    },
    "modes": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "name": { "$ref": "#/definitions/modeNameString" },
          "shortName": { "$ref": "#/definitions/modeNameString" },
          "rdmPersonalityIndex": {
            "type": "integer",
            "minimum": 1
          },
          "physical": { "$ref": "#/properties/physical" },
          "channels": {
            "type": "array",
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "$comment": "for unused channels",
                  "type": "null"
                },
                {
                  "$comment": "normal channel keys, resolved template channel keys or channel alias keys",
                  "$ref": "#/definitions/noVariablesString"
                },
                {
                  "type": "object",
                  "properties": {
                    "insert": { "enum": ["matrixChannels"] },
                    "repeatFor": {
                      "oneOf": [
                        {
                          "enum": [
                            "eachPixelABC",
                            "eachPixelXYZ",
                            "eachPixelXZY",
                            "eachPixelYXZ",
                            "eachPixelYZX",
                            "eachPixelZXY",
                            "eachPixelZYX",
                            "eachPixelGroup"
                          ]
                        },
                        {
                          "type": "array",
                          "minItems": 1,
                          "uniqueItems": true,
                          "items": {
                            "$comment": "pixel key or pixel group key",
                            "$ref": "#/definitions/noVariablesString"
                          }
                        }
                      ]
                    },
                    "channelOrder": { "enum": ["perPixel", "perChannel"] },
                    "templateChannels": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "oneOf": [
                          {
                            "$comment": "for unused channels",
                            "type": "null"
                          },
                          {
                            "$comment": "template channel key or template channel alias key",
                            "$ref": "#/definitions/variablePixelKeyString"
                          }
                        ]
                      }
                    }
                  },
                  "required": ["insert", "repeatFor", "channelOrder", "templateChannels"],
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "required": ["name", "channels"],
        "additionalProperties": false
      }
    }
  },
  "dependencies": {
    "matrix": ["templateChannels"],
    "templateChannels": ["matrix"]
  },
  "required": ["name", "categories", "meta", "modes"],
  "if": {
    "properties": { "modes": { "contains": { "required": ["rdmPersonalityIndex"] } } }
  },
  "then": {
    "required": ["rdm"]
  },
  "patternProperties": {
    "^\\$": {
      "$comment": "JSON schema properties are allowed",
      "type": "string"
    }
  },
  "additionalProperties": false
}