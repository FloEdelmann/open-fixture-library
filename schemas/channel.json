{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/OpenLightingProject/open-fixture-library/master/schemas/channel.json",

  "$comment": "This file is used by another schema file and should not be used directly as a JSON schema.",

  "type": "object",
  "properties": {
    "name": {
      "$comment": "if not set: use channel key",
      "$ref": "definitions.json#/nonEmptyString"
    },
    "type": {
      "enum": [
        "Intensity",
        "Single Color",
        "Multi-Color",
        "Pan",
        "Tilt",
        "Focus",
        "Zoom",
        "Iris",
        "Gobo",
        "Prism",
        "Shutter",
        "Strobe",
        "Speed",
        "Color Temperature",
        "Effect",
        "Fog",
        "Maintenance",
        "Nothing"
      ]
    },
    "color": {
      "enum": [
        "Red",
        "Green",
        "Blue",
        "Cyan",
        "Magenta",
        "Yellow",
        "Amber",
        "White",
        "UV",
        "Lime",
        "Indigo"
      ]
    },
    "fineChannelAliases": {
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "oneOf": [
          { "$ref": "definitions.json#/noVariablesString" },
          {
            "$ref": "definitions.json#/variablePixelKeyString",
            "$comment": "only in template channels"
          }
        ]
      }
    },
    "defaultValue": { "$ref": "definitions.json#/dmxValue" },
    "highlightValue": { "$ref": "definitions.json#/dmxValue" },
    "invert": { "type": "boolean" },
    "constant": { "type": "boolean" },
    "crossfade": { "type": "boolean" },
    "precedence": { "enum": ["LTP", "HTP"] },
    "capabilities": {
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": { "$ref": "capability.json#" }
    }
  },
  "required": ["type"],
  "allOf": [
    {
      "$comment": "color property is required in Single Color channels, forbidden otherwise",
      "if": {
        "properties": { "type": { "enum": ["Single Color"] } }
      },
      "then": {
        "required": ["type", "color"]
      },
      "else": {
        "not": { "required": ["color"] }
      }
    },
    {
      "if": {
        "properties": { "type": { "enum": [ "Nothing" ] } }
      },
      "then": {
        "$comment": "only type and name properties are allowed",
        "oneOf": [
          {
            "maxProperties": 1,
            "required": [ "type" ]
          },
          {
            "maxProperties": 2,
            "required": [ "name", "type" ]
          }
        ]
      }
    },
    {
      "if": {
        "$comment": "one capability sets switchChannels",
        "properties": {
          "capabilities": {
            "contains": {
              "required": ["switchChannels"]
            }
          }
        },
        "required": ["capabilities"]
      },
      "then": {
        "$comment": "defaultValue must be set and all capabilities have to set switchChannels",
        "required": ["defaultValue"],
        "properties": {
          "capabilities": {
            "items": {
              "required": ["switchChannels"]
            }
          }
        }
      }
    },
    {
      "if": {
        "not": { "properties": { "type": { "enum": [ "Multi-Color", "Effect", "Gobo" ] } } }
      },
      "then": {
        "$comment": "capabilities may not set color or image properties",
        "properties": {
          "capabilities": {
            "items": {
              "not": {
                "anyOf": [
                { "required": ["color"] },
                { "required": ["image"] }
              ]
            }
          }
        }
      }
    }
    }
  ],
  "additionalProperties": false
}
