{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/FloEdelmann/open-fixture-library/master/schemas/channel.json",
  "$comment": "This file is used by another schema file and should not be used directly as a JSON schema.",
  "type": "object",
  "properties": {
    "name": {
      "$comment": "if not set: use channel key",
      "type": "string",
      "pattern": "^[^\n]+$"
    },
    "type": {
      "enum": [
        "Intensity",
        "Single Color",
        "Multi-Color",
        "Pan",
        "Tilt",
        "Focus",
        "Zoom",
        "Iris",
        "Gobo",
        "Prism",
        "Shutter",
        "Strobe",
        "Speed",
        "Color Temperature",
        "Effect",
        "Fog",
        "Maintenance",
        "Nothing"
      ]
    },
    "color": {
      "enum": [
        "Red",
        "Green",
        "Blue",
        "Cyan",
        "Magenta",
        "Yellow",
        "Amber",
        "White",
        "UV",
        "Lime",
        "Indigo"
      ]
    },
    "fineChannelAliases": {
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "oneOf": [
          {
            "type": "string",
            "pattern": "^[^$\n]+$"
          },
          {
            "$comment": "only in template channels",
            "type": "string",
            "pattern": "\\$pixelKey"
          }
        ]
      }
    },
    "defaultValue": {
      "type": "integer",
      "minimum": 0,
      "$comment": "maximum depends on how many fine channels there are (255 if none, 65535 if one, etc.)"
    },
    "highlightValue": {
      "type": "integer",
      "minimum": 0,
      "$comment": "maximum depends on how many fine channels there are (255 if none, 65535 if one, etc.)"
    },
    "invert": {
      "type": "boolean"
    },
    "constant": {
      "type": "boolean"
    },
    "crossfade": {
      "type": "boolean"
    },
    "precedence": {
      "enum": [
        "LTP",
        "HTP"
      ]
    },
    "capabilities": {
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "https://raw.githubusercontent.com/FloEdelmann/open-fixture-library/master/schemas/channel.json",
        "$comment": "This file is used by another schema file and should not be used directly as a JSON schema.",
        "type": "object",
        "properties": {
          "range": {
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": {
              "type": "integer",
              "minimum": 0,
              "$comment": "maximum depends on how many fine channels there are (255 if none, 65535 if one, etc.)"
            }
          },
          "name": {
            "type": "string",
            "pattern": "^[^\n]+$"
          },
          "menuClick": {
            "enum": [
              "start",
              "center",
              "end",
              "hidden"
            ]
          },
          "color": {
            "type": "string",
            "pattern": "^#[0-9a-f]{6}$"
          },
          "color2": {
            "type": "string",
            "pattern": "^#[0-9a-f]{6}$"
          },
          "image": {
            "type": "string",
            "pattern": "^[^\n]+$"
          },
          "switchChannels": {
            "type": "object",
            "minProperties": 1,
            "propertyNames": {
              "$comment": "switching channel alias keys",
              "oneOf": [
                {
                  "type": "string",
                  "pattern": "^[^$\n]+$"
                },
                {
                  "type": "string",
                  "pattern": "\\$pixelKey"
                }
              ]
            },
            "additionalProperties": {
              "oneOf": [
                {
                  "$comment": "channel key or channel alias key",
                  "type": "string",
                  "pattern": "^[^$\n]+$"
                },
                {
                  "$comment": "template channel key or template channel alias key",
                  "type": "string",
                  "pattern": "\\$pixelKey"
                }
              ]
            }
          }
        },
        "dependencies": {
          "color2": [
            "color"
          ]
        },
        "not": {
          "allOf": [
            {
              "required": [
                "color"
              ]
            },
            {
              "required": [
                "image"
              ]
            }
          ]
        },
        "required": [
          "range",
          "name"
        ],
        "additionalProperties": false
      }
    }
  },
  "required": [
    "type"
  ],
  "allOf": [
    {
      "$comment": "color property is required in Single Color channels, forbidden otherwise",
      "if": {
        "properties": {
          "type": {
            "enum": [
              "Single Color"
            ]
          }
        }
      },
      "then": {
        "required": [
          "type",
          "color"
        ]
      },
      "else": {
        "not": {
          "required": [
            "color"
          ]
        }
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "enum": [
              "Nothing"
            ]
          }
        }
      },
      "then": {
        "$comment": "only type and name properties are allowed",
        "oneOf": [
          {
            "maxProperties": 1,
            "required": [
              "type"
            ]
          },
          {
            "maxProperties": 2,
            "required": [
              "name",
              "type"
            ]
          }
        ]
      }
    },
    {
      "if": {
        "$comment": "one capability sets switchChannels",
        "properties": {
          "capabilities": {
            "contains": {
              "required": [
                "switchChannels"
              ]
            }
          }
        },
        "required": [
          "capabilities"
        ]
      },
      "then": {
        "$comment": "defaultValue must be set and all capabilities have to set switchChannels",
        "required": [
          "defaultValue"
        ],
        "properties": {
          "capabilities": {
            "items": {
              "required": [
                "switchChannels"
              ]
            }
          }
        }
      }
    },
    {
      "if": {
        "not": {
          "properties": {
            "type": {
              "enum": [
                "Multi-Color",
                "Effect",
                "Gobo"
              ]
            }
          }
        }
      },
      "then": {
        "$comment": "capabilities may not set color or image properties",
        "properties": {
          "capabilities": {
            "items": {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "color"
                    ]
                  },
                  {
                    "required": [
                      "image"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    }
  ],
  "additionalProperties": false
}