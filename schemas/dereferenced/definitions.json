{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/FloEdelmann/open-fixture-library/master/schemas/definitions.json",
  "$comment": "This file is used by another schema file and should not be used directly as a JSON schema.",
  "nonEmptyString": {
    "type": "string",
    "pattern": "^[^\n]+$"
  },
  "noVariablesString": {
    "type": "string",
    "pattern": "^[^$\n]+$"
  },
  "variablePixelKeyString": {
    "type": "string",
    "pattern": "\\$pixelKey"
  },
  "nonEmptyMultilineString": {
    "type": "string",
    "minLength": 1
  },
  "modeNameString": {
    "allOf": [
      {
        "type": "string",
        "pattern": "^[^\n]+$"
      },
      {
        "pattern": "^((?!mode)(?!Mode).)*$"
      }
    ]
  },
  "urlString": {
    "type": "string",
    "pattern": "^(ftp|http|https):\\/\\/[^ \"]+$"
  },
  "isoDateString": {
    "type": "string",
    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
  },
  "colorString": {
    "type": "string",
    "pattern": "^#[0-9a-f]{6}$",
    "format": "color-hex"
  },
  "dmxValue": {
    "type": "integer",
    "minimum": 0,
    "$comment": "maximum depends on how many fine channels there are (255 if none, 65535 if one, etc.)"
  },
  "dimensionsXYZ": {
    "$comment": "width, height, depth (in mm)",
    "type": "array",
    "minItems": 3,
    "maxItems": 3,
    "items": {
      "type": "number",
      "minimum": 0
    }
  },
  "units": {
    "nonNegativeNumber": {
      "type": "number",
      "minimum": 0
    },
    "positiveInteger": {
      "type": "integer",
      "minimum": 0,
      "exclusiveMinimum": 0
    },
    "percent": {
      "type": "string",
      "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
    },
    "hertz": {
      "type": "string",
      "pattern": "^-?[0-9]+(\\.[0-9]+)?Hz$"
    },
    "seconds": {
      "type": "string",
      "pattern": "^-?[0-9]+(\\.[0-9]+)?s$"
    },
    "milliSeconds": {
      "type": "string",
      "pattern": "^-?[0-9]+(\\.[0-9]+)?ms$"
    },
    "meters": {
      "type": "string",
      "pattern": "^-?[0-9]+(\\.[0-9]+)?m$"
    },
    "lumens": {
      "type": "string",
      "pattern": "^-?[0-9]+(\\.[0-9]+)?lm$"
    },
    "kelvin": {
      "type": "string",
      "pattern": "^-?[0-9]+(\\.[0-9]+)?K$"
    },
    "volumePerMinute": {
      "type": "string",
      "pattern": "^-?[0-9]+(\\.[0-9]+)?m\\^3/min$"
    },
    "degrees": {
      "type": "string",
      "pattern": "^-?[0-9]+(\\.[0-9]+)?°$"
    }
  },
  "entities": {
    "speed": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?Hz$"
        },
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        },
        {
          "enum": [
            "fast reverse",
            "slow reverse",
            "stop",
            "slow",
            "fast"
          ]
        }
      ]
    },
    "rotationSpeed": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?Hz$"
        },
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        },
        {
          "enum": [
            "fast CCW",
            "slow CCW",
            "stop",
            "slow CW",
            "fast CW"
          ]
        }
      ]
    },
    "time": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?s$"
        },
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?ms$"
        },
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        },
        {
          "enum": [
            "instant",
            "slow",
            "fast"
          ]
        }
      ]
    },
    "distance": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?m$"
        },
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        },
        {
          "enum": [
            "near",
            "far"
          ]
        }
      ]
    },
    "brightness": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?lm$"
        },
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        },
        {
          "enum": [
            "off",
            "dark",
            "bright"
          ]
        }
      ]
    },
    "colorTemperature": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?K$"
        },
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        },
        {
          "enum": [
            "warm",
            "default",
            "cold"
          ]
        }
      ]
    },
    "fogOutput": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?m\\^3/min$"
        },
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        },
        {
          "enum": [
            "off",
            "weak",
            "strong"
          ]
        }
      ]
    },
    "rotationAngle": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?°$"
        },
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        }
      ]
    },
    "beamAngle": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?°$"
        },
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        },
        {
          "enum": [
            "closed",
            "narrow",
            "wide"
          ]
        }
      ]
    },
    "factor": {
      "oneOf": [
        {
          "type": "number",
          "minimum": 0
        },
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        },
        {
          "enum": [
            "off",
            "low",
            "high"
          ]
        }
      ]
    },
    "index": {
      "type": "number",
      "minimum": 0
    },
    "percent": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        },
        {
          "enum": [
            "off",
            "low",
            "high"
          ]
        }
      ]
    },
    "insertion": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        },
        {
          "enum": [
            "out",
            "in"
          ]
        }
      ]
    },
    "irisPercent": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?%$"
        },
        {
          "enum": [
            "closed",
            "open"
          ]
        }
      ]
    }
  }
}