.fixture-meta {
  margin: -1.5rem 0 1rem;
  font-size: 0.8rem;
  color: $secondary-text-dark;

  & > span:not(:last-child)::after {
    content: ' | ';
    padding: 0 0.7ex;
  }
}

.download-button {
  & > .title {
    display: block;
    box-sizing: border-box;
    width: 100%;
    padding: 0.5ex 2ex;
    border-radius: 2px;
    background: $orange-500;
    font-family: LatoLatinSemibold;
    color: $primary-text-light;
    cursor: pointer;
    box-shadow: 0 2px 2px rgba(#000, 0.2);
    transition: border-radius 0.2s, background-color 0.2s;

    /* down arrow */
    &::before {
      content: '';
      display: block;
      width: 0;
      height: 0;
      border-width: 0.4em 0.4em 0;
      border-style: solid;
      border-color: currentcolor transparent transparent;
      float: right;
      margin: 0.8em 0 0 1ex;
    }
  }

  & > ul {
    position: absolute;
    left: -9999px;
    top: 100%;
    padding: 0.7em 0;
    margin: 0;
    width: 100%;
    list-style: none;
    background-color: $grey-50;
    border-radius: 0 0 2px 2px;
    box-shadow: 0 2px 2px rgba(#000, 0.2);
    z-index: 90;

    & a {
      display: block;
      padding: 0.2ex 2ex;
      color: $primary-text-dark;
      transition: background-color 0.2s;
    }

    & a:hover,
    & a:focus {
      background-color: $grey-200;
      outline: 0;
    }
  }

  &:hover > .title,
  & > .title:focus,
  & > .title:active {
    border-radius: 2px 2px 0 0;
    background: $orange-700;
  }

  &:hover > ul,
  & > .title:focus + ul,
  & > .title:active + ul {
    left: 0;
  }

  /* single rule since unsupporting browsers skip the whole rule */
  &:focus-within > .title {
    border-radius: 2px 2px 0 0;
    background: $orange-700;
  }
  &:focus-within > ul {
    left: 0;
  }
}

.fixture-header > .download-button {
  display: block;
  position: relative;
  margin: 0 0 1em;
}

.category-badge {
  display: inline-block;
  padding: 4px 1.5ex 4px 1ex;
  margin: 0 0 4px;
  border-radius: 5000px; /* see http://stackoverflow.com/a/18795153/451391 */
  background: $grey-100;

  &:link,
  &:visited {
    color: $primary-text-dark;
    fill: $icon-dark;
  }
  &:hover,
  &:focus {
    background-color: $grey-300;
  }

  &.selected {
    background-color: $blue-700;

    &:link,
    &:visited {
      color: $primary-text-light;
      fill: $icon-light;
    }
    &:hover,
    &:focus {
      background-color: $blue-300;
    }
  }

  & > svg {
    height: 1.7em;
    width: 1.7em;
    vertical-align: middle;
  }
}

.fixture-info > .manualURL {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;

  & > .value {
    display: inline;
  }

  section.physical {
    -moz-columns: 2 300px;
    -moz-column-gap: 3rem;
    columns: 2 350px;
    column-gap: 3rem;

    & > section {
      page-break-inside: avoid;
      break-inside: avoid;
    }
  }
}

section {
  padding-top: 1.2ex;
}

.channel > summary {
  display: block;
  cursor: pointer;

  &::-webkit-details-marker {
    display: none;
  }

  &::after {
    /* chevron down */
    border-color: $icon-dark;
    border-style: solid;
    border-width: 0.17em 0.17em 0 0;
    content: '';
    display: inline-block;
    height: 0.4em;
    left: 1.2ex;
    position: relative;
    top: -0.2em;
    transform: rotate(135deg);
    transition-duration: 0.2s;
    transition-property: transform, top, border-color;
    vertical-align: middle;
    width: 0.4em;
  }

  &:hover::after {
    border-color: $icon-dark-hover;
  }
}
.channel[open] {
  padding-bottom: 2ex;

  & > summary::after {
    /* chevron up */
    top: 0;
    transform: rotate(315deg);
  }
}

details.channel > summary > .icon,
div.channel > .icon {
  margin-right: 1.2ex;
}

.label {
  display: block;
  color: $secondary-text-dark;
  vertical-align: top;
}

.value {
  display: inline-block;
  vertical-align: top;
}

.hint {
  display: block;
  color: $secondary-text-dark;
  font-size: 0.8rem;
  line-height: 1.5;
}

.color-circle > span {
  display: inline-block;
  box-sizing: border-box;

  /* follow Material guidelines for whitespace around icons */
  /* 1.4em in total like .icon */
  width: 1.28em;
  height: 1.28em;
  margin: 0.06em;

  border: 1px solid #ddd;
  border-radius: 50%;
  overflow: hidden;

  & > * {
    display: block;
    width: 4ex;
    height: 4ex;
    margin: -1ex 0 0 1ex;
    transform: rotate(45deg);
    transform-origin: left center;
  }
}

.checkbox {
  display: inline-block;
  border: 1px solid #cfd6e6;
  border-radius: 3px;
  height: 14px;
  line-height: 14px;
  padding: 0 0 0 14px;
  width: 0px;
  overflow: hidden;
  vertical-align: middle;
  color: #cfd6e6;
  cursor: default;

  &[title='false'] {
    border-color: #b00;
  }
  &[title='true'] {
    border-color: #0b5;
  }

  &::before {
    display: block;
    text-align: center;
    width: 14px;
    margin-left: -14px;
  }
  &:empty::before {
    content: '?';
  }
  &[title='false']::before {
    color: #b00;
    content: '\d7';
    font-weight: bold;
  }
  &[title='true']::before {
    color: #0b5;
    content: '\2714';
  }
}

html:not(.js) #fixture-editor {
  display: none;
}

select[data-allow-additions] + input:disabled {
  display: none;
}

a.fixture-mode {
  text-align: center;
}

/* switched channels */
.fixture-mode ol ol {
  list-style-type: lower-alpha;
}

/* if a mode is the only mode, hide its remove button */
.fixture-modes > .fixture-mode:first-child:nth-last-child(3) > .close {
  display: none;
}

/* add a number after each mode */
#fixture-editor {
  counter-reset: modes;
}
#fixture-editor .fixture-mode:not(a) h2::after {
  counter-increment: modes;
  content: " #" counter(modes);
}

.mode-channels a,
.capabilities a {
  opacity: 0;
  float: right;
  width: 1.4em;
  height: 1.4em;
  padding: 0.3em;
  transition: opacity 0.1s;
  display: inline-block;
}
.mode-channels > li:hover > a,
.mode-channels a:focus,
.capabilities > li:hover > a,
.capabilities a:focus {
  opacity: 1;
}

.capabilities {
  list-style: none;
  padding: 0;
  margin: 0;

  & > li {
    padding: 1rem 0 0;

    & > .value {
      margin-left: 2ex;
    }

    & .name {
      width: 25ex;
    }
    & .color {
      width: 10ex;
    }
  }
}

.capabilities-table {
  border-collapse: collapse;
  table-layout: fixed;
  width: 100%;

  th {
    font-weight: normal;
    color: $secondary-text-dark;
  }

  td, th {
    padding: 0 4px;
    vertical-align: top;
  }

  .capability-range0 {
    text-align: right;
    padding-right: 2px;
  }

  .capability-range-separator {
    text-align: center;
    padding-left: 0;
    padding-right: 0;
  }

  .capability-range1 {
    text-align: left;
    padding-left: 2px;
  }

  .capability-menuClick {
    text-align: right;
  }

  .switch-to-channel {
    line-height: 1rem;
    padding-bottom: 4px;
    font-size: 82%;

    & > .switching-channel-key {
      color: $secondary-text-dark;
    }
  }
}


/* display mode cards in a 2-col layout */
@media (min-width: $tablet) {
  .fixture-modes > .card.fixture-mode {
    width: calc(50% - .5rem);

    & > h2 {
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
    }

    &:nth-child(odd) {
      margin-right: .5rem;
      float: left;
      clear: left;
    }
    &:nth-child(even) {
      margin-left: .5rem;
      float: right;
      clear: right;
    }
  }

  .card.fixture-mode .value {
    max-width: none;
  }
}

/* move download button to the right, labels left of values */
@media (min-width: 650px) {
  .fixture-header {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: row;
    flex-direction: row;
    align-items: flex-start;

    & > .title {
      -ms-flex: 1 1 auto;
      flex-grow: 1;
      flex-shrink: 1;
    }

    & > .download-button {
      -ms-flex: 0 0 auto;
      flex-grow: 0;
      flex-shrink: 0;
      margin: 1.5rem 0 0;
      width: 14em;

      &.big {
        width: 19em;

        & .title {
          font-size: 1.1em;
        }
      }
    }
  }

  .label {
    display: inline-block;
    min-width: 10rem;
  }
  .value {
    max-width: calc(100% - 12rem - 1ex);
  }

  /* for 2-column cards, do still display labels above values */
  .fixture-modes {
    .label {
      display: block;
    }
    .value {
      max-width: none;
    }
  }
}
