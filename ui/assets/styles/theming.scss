/**
 * Function to get a theme color CSS variable (with fallback to light themed color).
 *
 * Usage:
 *     background: linear-gradient(to top, red, theme-color(primary));
 *
 * Output:
 *     background: linear-gradient(to top, red, var(--theme-primary, $primary));
 */
@function theme-color($color-name, $alpha: 1) {
  $default-theme: map-get($themes, light);
  $themed-color: map-get($default-theme, $color-name);

  @if (map-has-key($default-theme, $color-name) == false) {
    @error "Theme color #{$color-name} doesn't exist in light theme.";
  }

  $alpha: $alpha * alpha($themed-color);

  @return #{'rgba(var(--theme-' + $color-name + ', ' + colorToRgbString($themed-color) + '), ' + $alpha + ')'};
}

@function colorToRgbString($hexColor) {
  @return "#{red($hexColor)}, #{green($hexColor)}, #{blue($hexColor)}";
}
