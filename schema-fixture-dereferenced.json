{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/FloEdelmann/open-fixture-library/master/schema-fixture.json",
  "version": "5.0.0",
  "definitions": {
    "nonEmptyString": {
      "type": "string",
      "pattern": "^[^\n]+$"
    },
    "noVariablesString": {
      "type": "string",
      "pattern": "^[^$\n]+$"
    },
    "variablePixelKeyString": {
      "type": "string",
      "pattern": "\\$pixelKey"
    },
    "nonEmptyMultilineString": {
      "type": "string",
      "minLength": 1
    },
    "modeNameString": {
      "allOf": [
        {
          "type": "string",
          "pattern": "^[^\n]+$"
        },
        {
          "pattern": "^((?!mode)(?!Mode).)*$"
        }
      ]
    },
    "urlString": {
      "type": "string",
      "pattern": "^(ftp|http|https):\\/\\/[^ \"]+$"
    },
    "isoDateString": {
      "type": "string",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
    },
    "colorString": {
      "type": "string",
      "pattern": "^#[0-9a-f]{6}$"
    },
    "dmxValue": {
      "type": "integer",
      "minimum": 0,
      "$comment": "maximum depends on how many fine channels there are (255 if none, 65535 if one, etc.)"
    },
    "dimensionsXYZ": {
      "$comment": "width, height, depth (in mm)",
      "type": "array",
      "minItems": 3,
      "maxItems": 3,
      "items": {
        "type": "number",
        "minimum": 0
      }
    }
  },
  "type": "object",
  "properties": {
    "name": {
      "$comment": "unique in manufacturer",
      "type": "string",
      "pattern": "^[^\n]+$"
    },
    "shortName": {
      "$comment": "unique globally; if not set: use name",
      "type": "string",
      "pattern": "^[^\n]+$"
    },
    "categories": {
      "type": "array",
      "$comment": "most important category first",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "enum": [
          "Blinder",
          "Color Changer",
          "Dimmer",
          "Effect",
          "Fan",
          "Flower",
          "Hazer",
          "Laser",
          "Matrix",
          "Moving Head",
          "Scanner",
          "Smoke",
          "Strobe",
          "Other"
        ]
      }
    },
    "meta": {
      "type": "object",
      "properties": {
        "authors": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "string",
            "pattern": "^[^\n]+$"
          }
        },
        "createDate": {
          "type": "string",
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        "lastModifyDate": {
          "type": "string",
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        "importPlugin": {
          "type": "object",
          "properties": {
            "plugin": {
              "type": "string",
              "pattern": "^[^\n]+$"
            },
            "date": {
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "comment": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "plugin",
            "date"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "authors",
        "createDate",
        "lastModifyDate"
      ],
      "additionalProperties": false
    },
    "comment": {
      "type": "string",
      "minLength": 1
    },
    "manualURL": {
      "type": "string",
      "pattern": "^(ftp|http|https):\\/\\/[^ \"]+$"
    },
    "rdm": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535
        },
        "softwareVersion": {
          "type": "string",
          "pattern": "^[^\n]+$"
        }
      },
      "required": [
        "modelId"
      ],
      "additionalProperties": false
    },
    "physical": {
      "type": "object",
      "minProperties": 1,
      "properties": {
        "dimensions": {
          "$comment": "width, height, depth (in mm)",
          "type": "array",
          "minItems": 3,
          "maxItems": 3,
          "items": {
            "type": "number",
            "minimum": 0
          }
        },
        "weight": {
          "$comment": "in kg",
          "type": "number",
          "exclusiveMinimum": 0
        },
        "power": {
          "$comment": "in W",
          "type": "number",
          "exclusiveMinimum": 0
        },
        "DMXconnector": {
          "$comment": "additions are welcome",
          "enum": [
            "3-pin",
            "5-pin",
            "3-pin (swapped +/-)",
            "3-pin and 5-pin",
            "3-pin XLR IP65",
            "3.5mm stereo jack"
          ]
        },
        "bulb": {
          "type": "object",
          "minProperties": 1,
          "properties": {
            "type": {
              "$comment": "e.g. 'LED'",
              "type": "string",
              "pattern": "^[^\n]+$"
            },
            "colorTemperature": {
              "$comment": "in K",
              "type": "number",
              "exclusiveMinimum": 0
            },
            "lumens": {
              "type": "number",
              "exclusiveMinimum": 0
            }
          },
          "additionalProperties": false
        },
        "lens": {
          "type": "object",
          "minProperties": 1,
          "properties": {
            "name": {
              "$comment": "e.g. 'PC', 'Fresnel'",
              "type": "string",
              "pattern": "^[^\n]+$"
            },
            "degreesMinMax": {
              "type": "array",
              "minItems": 2,
              "maxItems": 2,
              "items": {
                "type": "number",
                "minimum": 0,
                "maximum": 360
              }
            }
          },
          "additionalProperties": false
        },
        "focus": {
          "type": "object",
          "minProperties": 1,
          "properties": {
            "type": {
              "$comment": "additions are welcome",
              "enum": [
                "Fixed",
                "Head",
                "Mirror",
                "Barrel"
              ]
            },
            "panMax": {
              "$comment": "in degrees",
              "type": "number",
              "minimum": 0
            },
            "tiltMax": {
              "$comment": "in degrees",
              "type": "number",
              "minimum": 0
            }
          },
          "additionalProperties": false
        },
        "matrixPixels": {
          "type": "object",
          "properties": {
            "dimensions": {
              "$comment": "width, height, depth (in mm)",
              "type": "array",
              "minItems": 3,
              "maxItems": 3,
              "items": {
                "type": "number",
                "minimum": 0
              }
            },
            "spacing": {
              "$comment": "width, height, depth (in mm)",
              "type": "array",
              "minItems": 3,
              "maxItems": 3,
              "items": {
                "type": "number",
                "minimum": 0
              }
            }
          },
          "required": [
            "dimensions",
            "spacing"
          ]
        }
      },
      "additionalProperties": false
    },
    "matrix": {
      "type": "object",
      "properties": {
        "pixelCount": {
          "$comment": "amount of pixels in X, Y and Z directions",
          "type": "array",
          "minItems": 3,
          "maxItems": 3,
          "items": {
            "type": "integer",
            "minimum": 1
          }
        },
        "pixelKeys": {
          "$comment": "pixelKeys in a structure of arrays for the Z, Y and X directions",
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "array",
              "minItems": 1,
              "items": {
                "oneOf": [
                  {
                    "type": "string",
                    "pattern": "^[^$\n]+$"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        },
        "pixelGroups": {
          "type": "object",
          "minProperties": 1,
          "propertyNames": {
            "$comment": "pixel group keys",
            "type": "string",
            "pattern": "^[^$\n]+$"
          },
          "additionalProperties": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "pattern": "^[^$\n]+$"
            }
          }
        }
      },
      "oneOf": [
        {
          "required": [
            "pixelCount"
          ]
        },
        {
          "required": [
            "pixelKeys"
          ]
        }
      ],
      "additionalProperties": false
    },
    "availableChannels": {
      "type": "object",
      "minProperties": 1,
      "propertyNames": {
        "$comment": "channel keys",
        "type": "string",
        "pattern": "^[^$\n]+$"
      },
      "additionalProperties": {
        "type": "object",
        "properties": {
          "name": {
            "$comment": "if not set: use channel key",
            "type": "string",
            "pattern": "^[^\n]+$"
          },
          "type": {
            "enum": [
              "Intensity",
              "Single Color",
              "Multi-Color",
              "Pan",
              "Tilt",
              "Focus",
              "Zoom",
              "Iris",
              "Gobo",
              "Prism",
              "Shutter",
              "Strobe",
              "Speed",
              "Color Temperature",
              "Effect",
              "Fog",
              "Maintenance",
              "Nothing"
            ]
          },
          "color": {
            "enum": [
              "Red",
              "Green",
              "Blue",
              "Cyan",
              "Magenta",
              "Yellow",
              "Amber",
              "White",
              "UV",
              "Lime",
              "Indigo"
            ]
          },
          "fineChannelAliases": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "pattern": "^[^$\n]+$"
                },
                {
                  "$comment": "only in template channels",
                  "type": "string",
                  "pattern": "\\$pixelKey"
                }
              ]
            }
          },
          "defaultValue": {
            "type": "integer",
            "minimum": 0,
            "$comment": "maximum depends on how many fine channels there are (255 if none, 65535 if one, etc.)"
          },
          "highlightValue": {
            "type": "integer",
            "minimum": 0,
            "$comment": "maximum depends on how many fine channels there are (255 if none, 65535 if one, etc.)"
          },
          "invert": {
            "type": "boolean"
          },
          "constant": {
            "type": "boolean"
          },
          "crossfade": {
            "type": "boolean"
          },
          "precedence": {
            "enum": [
              "LTP",
              "HTP"
            ]
          },
          "capabilities": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "range": {
                  "type": "array",
                  "minItems": 2,
                  "maxItems": 2,
                  "items": {
                    "type": "integer",
                    "minimum": 0,
                    "$comment": "maximum depends on how many fine channels there are (255 if none, 65535 if one, etc.)"
                  }
                },
                "name": {
                  "type": "string",
                  "pattern": "^[^\n]+$"
                },
                "menuClick": {
                  "enum": [
                    "start",
                    "center",
                    "end",
                    "hidden"
                  ]
                },
                "color": {
                  "type": "string",
                  "pattern": "^#[0-9a-f]{6}$"
                },
                "color2": {
                  "type": "string",
                  "pattern": "^#[0-9a-f]{6}$"
                },
                "image": {
                  "type": "string",
                  "pattern": "^[^\n]+$"
                },
                "switchChannels": {
                  "type": "object",
                  "minProperties": 1,
                  "propertyNames": {
                    "$comment": "switching channel alias keys",
                    "oneOf": [
                      {
                        "type": "string",
                        "pattern": "^[^$\n]+$"
                      },
                      {
                        "type": "string",
                        "pattern": "\\$pixelKey"
                      }
                    ]
                  },
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "$comment": "channel key or channel alias key",
                        "type": "string",
                        "pattern": "^[^$\n]+$"
                      },
                      {
                        "$comment": "template channel key or template channel alias key",
                        "type": "string",
                        "pattern": "\\$pixelKey"
                      }
                    ]
                  }
                }
              },
              "dependencies": {
                "color2": [
                  "color"
                ]
              },
              "not": {
                "allOf": [
                  {
                    "required": [
                      "color"
                    ]
                  },
                  {
                    "required": [
                      "image"
                    ]
                  }
                ]
              },
              "required": [
                "range",
                "name"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "type"
        ],
        "allOf": [
          {
            "$comment": "color property is required in Single Color channels, forbidden otherwise",
            "if": {
              "properties": {
                "type": {
                  "enum": [
                    "Single Color"
                  ]
                }
              }
            },
            "then": {
              "required": [
                "type",
                "color"
              ]
            },
            "else": {
              "not": {
                "required": [
                  "color"
                ]
              }
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "enum": [
                    "Nothing"
                  ]
                }
              }
            },
            "then": {
              "$comment": "only type and name properties are allowed",
              "oneOf": [
                {
                  "maxProperties": 1,
                  "required": [
                    "type"
                  ]
                },
                {
                  "maxProperties": 2,
                  "required": [
                    "name",
                    "type"
                  ]
                }
              ]
            }
          },
          {
            "if": {
              "$comment": "one capability sets switchChannels",
              "properties": {
                "capabilities": {
                  "contains": {
                    "required": [
                      "switchChannels"
                    ]
                  }
                }
              },
              "required": [
                "capabilities"
              ]
            },
            "then": {
              "$comment": "defaultValue must be set and all capabilities have to set switchChannels",
              "required": [
                "defaultValue"
              ],
              "properties": {
                "capabilities": {
                  "items": {
                    "required": [
                      "switchChannels"
                    ]
                  }
                }
              }
            }
          },
          {
            "if": {
              "not": {
                "properties": {
                  "type": {
                    "enum": [
                      "Multi-Color",
                      "Effect",
                      "Gobo"
                    ]
                  }
                }
              }
            },
            "then": {
              "$comment": "capabilities may not set color or image properties",
              "properties": {
                "capabilities": {
                  "items": {
                    "not": {
                      "anyOf": [
                        {
                          "required": [
                            "color"
                          ]
                        },
                        {
                          "required": [
                            "image"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "additionalProperties": false
      }
    },
    "templateChannels": {
      "type": "object",
      "minProperties": 1,
      "propertyNames": {
        "$comment": "template channel keys",
        "type": "string",
        "pattern": "\\$pixelKey"
      },
      "additionalProperties": {
        "type": "object",
        "properties": {
          "name": {
            "$comment": "if not set: use channel key",
            "type": "string",
            "pattern": "^[^\n]+$"
          },
          "type": {
            "enum": [
              "Intensity",
              "Single Color",
              "Multi-Color",
              "Pan",
              "Tilt",
              "Focus",
              "Zoom",
              "Iris",
              "Gobo",
              "Prism",
              "Shutter",
              "Strobe",
              "Speed",
              "Color Temperature",
              "Effect",
              "Fog",
              "Maintenance",
              "Nothing"
            ]
          },
          "color": {
            "enum": [
              "Red",
              "Green",
              "Blue",
              "Cyan",
              "Magenta",
              "Yellow",
              "Amber",
              "White",
              "UV",
              "Lime",
              "Indigo"
            ]
          },
          "fineChannelAliases": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "pattern": "^[^$\n]+$"
                },
                {
                  "$comment": "only in template channels",
                  "type": "string",
                  "pattern": "\\$pixelKey"
                }
              ]
            }
          },
          "defaultValue": {
            "type": "integer",
            "minimum": 0,
            "$comment": "maximum depends on how many fine channels there are (255 if none, 65535 if one, etc.)"
          },
          "highlightValue": {
            "type": "integer",
            "minimum": 0,
            "$comment": "maximum depends on how many fine channels there are (255 if none, 65535 if one, etc.)"
          },
          "invert": {
            "type": "boolean"
          },
          "constant": {
            "type": "boolean"
          },
          "crossfade": {
            "type": "boolean"
          },
          "precedence": {
            "enum": [
              "LTP",
              "HTP"
            ]
          },
          "capabilities": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "range": {
                  "type": "array",
                  "minItems": 2,
                  "maxItems": 2,
                  "items": {
                    "type": "integer",
                    "minimum": 0,
                    "$comment": "maximum depends on how many fine channels there are (255 if none, 65535 if one, etc.)"
                  }
                },
                "name": {
                  "type": "string",
                  "pattern": "^[^\n]+$"
                },
                "menuClick": {
                  "enum": [
                    "start",
                    "center",
                    "end",
                    "hidden"
                  ]
                },
                "color": {
                  "type": "string",
                  "pattern": "^#[0-9a-f]{6}$"
                },
                "color2": {
                  "type": "string",
                  "pattern": "^#[0-9a-f]{6}$"
                },
                "image": {
                  "type": "string",
                  "pattern": "^[^\n]+$"
                },
                "switchChannels": {
                  "type": "object",
                  "minProperties": 1,
                  "propertyNames": {
                    "$comment": "switching channel alias keys",
                    "oneOf": [
                      {
                        "type": "string",
                        "pattern": "^[^$\n]+$"
                      },
                      {
                        "type": "string",
                        "pattern": "\\$pixelKey"
                      }
                    ]
                  },
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "$comment": "channel key or channel alias key",
                        "type": "string",
                        "pattern": "^[^$\n]+$"
                      },
                      {
                        "$comment": "template channel key or template channel alias key",
                        "type": "string",
                        "pattern": "\\$pixelKey"
                      }
                    ]
                  }
                }
              },
              "dependencies": {
                "color2": [
                  "color"
                ]
              },
              "not": {
                "allOf": [
                  {
                    "required": [
                      "color"
                    ]
                  },
                  {
                    "required": [
                      "image"
                    ]
                  }
                ]
              },
              "required": [
                "range",
                "name"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "type"
        ],
        "allOf": [
          {
            "$comment": "color property is required in Single Color channels, forbidden otherwise",
            "if": {
              "properties": {
                "type": {
                  "enum": [
                    "Single Color"
                  ]
                }
              }
            },
            "then": {
              "required": [
                "type",
                "color"
              ]
            },
            "else": {
              "not": {
                "required": [
                  "color"
                ]
              }
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "enum": [
                    "Nothing"
                  ]
                }
              }
            },
            "then": {
              "$comment": "only type and name properties are allowed",
              "oneOf": [
                {
                  "maxProperties": 1,
                  "required": [
                    "type"
                  ]
                },
                {
                  "maxProperties": 2,
                  "required": [
                    "name",
                    "type"
                  ]
                }
              ]
            }
          },
          {
            "if": {
              "$comment": "one capability sets switchChannels",
              "properties": {
                "capabilities": {
                  "contains": {
                    "required": [
                      "switchChannels"
                    ]
                  }
                }
              },
              "required": [
                "capabilities"
              ]
            },
            "then": {
              "$comment": "defaultValue must be set and all capabilities have to set switchChannels",
              "required": [
                "defaultValue"
              ],
              "properties": {
                "capabilities": {
                  "items": {
                    "required": [
                      "switchChannels"
                    ]
                  }
                }
              }
            }
          },
          {
            "if": {
              "not": {
                "properties": {
                  "type": {
                    "enum": [
                      "Multi-Color",
                      "Effect",
                      "Gobo"
                    ]
                  }
                }
              }
            },
            "then": {
              "$comment": "capabilities may not set color or image properties",
              "properties": {
                "capabilities": {
                  "items": {
                    "not": {
                      "anyOf": [
                        {
                          "required": [
                            "color"
                          ]
                        },
                        {
                          "required": [
                            "image"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "additionalProperties": false
      }
    },
    "modes": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "type": "string",
                "pattern": "^[^\n]+$"
              },
              {
                "pattern": "^((?!mode)(?!Mode).)*$"
              }
            ]
          },
          "shortName": {
            "allOf": [
              {
                "type": "string",
                "pattern": "^[^\n]+$"
              },
              {
                "pattern": "^((?!mode)(?!Mode).)*$"
              }
            ]
          },
          "rdmPersonalityIndex": {
            "type": "integer",
            "minimum": 1
          },
          "physical": {
            "type": "object",
            "minProperties": 1,
            "properties": {
              "dimensions": {
                "$comment": "width, height, depth (in mm)",
                "type": "array",
                "minItems": 3,
                "maxItems": 3,
                "items": {
                  "type": "number",
                  "minimum": 0
                }
              },
              "weight": {
                "$comment": "in kg",
                "type": "number",
                "exclusiveMinimum": 0
              },
              "power": {
                "$comment": "in W",
                "type": "number",
                "exclusiveMinimum": 0
              },
              "DMXconnector": {
                "$comment": "additions are welcome",
                "enum": [
                  "3-pin",
                  "5-pin",
                  "3-pin (swapped +/-)",
                  "3-pin and 5-pin",
                  "3-pin XLR IP65",
                  "3.5mm stereo jack"
                ]
              },
              "bulb": {
                "type": "object",
                "minProperties": 1,
                "properties": {
                  "type": {
                    "$comment": "e.g. 'LED'",
                    "type": "string",
                    "pattern": "^[^\n]+$"
                  },
                  "colorTemperature": {
                    "$comment": "in K",
                    "type": "number",
                    "exclusiveMinimum": 0
                  },
                  "lumens": {
                    "type": "number",
                    "exclusiveMinimum": 0
                  }
                },
                "additionalProperties": false
              },
              "lens": {
                "type": "object",
                "minProperties": 1,
                "properties": {
                  "name": {
                    "$comment": "e.g. 'PC', 'Fresnel'",
                    "type": "string",
                    "pattern": "^[^\n]+$"
                  },
                  "degreesMinMax": {
                    "type": "array",
                    "minItems": 2,
                    "maxItems": 2,
                    "items": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 360
                    }
                  }
                },
                "additionalProperties": false
              },
              "focus": {
                "type": "object",
                "minProperties": 1,
                "properties": {
                  "type": {
                    "$comment": "additions are welcome",
                    "enum": [
                      "Fixed",
                      "Head",
                      "Mirror",
                      "Barrel"
                    ]
                  },
                  "panMax": {
                    "$comment": "in degrees",
                    "type": "number",
                    "minimum": 0
                  },
                  "tiltMax": {
                    "$comment": "in degrees",
                    "type": "number",
                    "minimum": 0
                  }
                },
                "additionalProperties": false
              },
              "matrixPixels": {
                "type": "object",
                "properties": {
                  "dimensions": {
                    "$comment": "width, height, depth (in mm)",
                    "type": "array",
                    "minItems": 3,
                    "maxItems": 3,
                    "items": {
                      "type": "number",
                      "minimum": 0
                    }
                  },
                  "spacing": {
                    "$comment": "width, height, depth (in mm)",
                    "type": "array",
                    "minItems": 3,
                    "maxItems": 3,
                    "items": {
                      "type": "number",
                      "minimum": 0
                    }
                  }
                },
                "required": [
                  "dimensions",
                  "spacing"
                ]
              }
            },
            "additionalProperties": false
          },
          "channels": {
            "type": "array",
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "$comment": "for unused channels",
                  "type": "null"
                },
                {
                  "$comment": "normal channel keys, resolved template channel keys or channel alias keys",
                  "type": "string",
                  "pattern": "^[^$\n]+$"
                },
                {
                  "$comment": "matrix channel insert block",
                  "type": "object",
                  "properties": {
                    "insert": {
                      "enum": [
                        "matrixChannels"
                      ]
                    },
                    "repeatFor": {
                      "oneOf": [
                        {
                          "enum": [
                            "eachPixelABC",
                            "eachPixelXYZ",
                            "eachPixelXZY",
                            "eachPixelYXZ",
                            "eachPixelYZX",
                            "eachPixelZXY",
                            "eachPixelZYX",
                            "eachPixelGroup"
                          ]
                        },
                        {
                          "type": "array",
                          "minItems": 1,
                          "uniqueItems": true,
                          "items": {
                            "$comment": "pixel key or pixel group key",
                            "type": "string",
                            "pattern": "^[^$\n]+$"
                          }
                        }
                      ]
                    },
                    "channelOrder": {
                      "enum": [
                        "perPixel",
                        "perChannel"
                      ]
                    },
                    "templateChannels": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "oneOf": [
                          {
                            "$comment": "for unused channels",
                            "type": "null"
                          },
                          {
                            "$comment": "template channel key or template channel alias key",
                            "type": "string",
                            "pattern": "\\$pixelKey"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "insert",
                    "repeatFor",
                    "channelOrder",
                    "templateChannels"
                  ],
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "required": [
          "name",
          "channels"
        ],
        "additionalProperties": false
      }
    }
  },
  "dependencies": {
    "matrix": [
      "templateChannels"
    ],
    "templateChannels": [
      "matrix"
    ]
  },
  "required": [
    "$schema",
    "name",
    "categories",
    "meta",
    "modes"
  ],
  "allOf": [
    {
      "if": {
        "properties": {
          "modes": {
            "contains": {
              "required": [
                "rdmPersonalityIndex"
              ]
            }
          }
        }
      },
      "then": {
        "required": [
          "rdm"
        ]
      }
    },
    {
      "anyOf": [
        {
          "required": [
            "availableChannels"
          ]
        },
        {
          "required": [
            "templateChannels"
          ]
        }
      ]
    }
  ],
  "patternProperties": {
    "^\\$schema$": {
      "enum": [
        "https://raw.githubusercontent.com/FloEdelmann/open-fixture-library/master/schema-fixture.json"
      ]
    }
  },
  "additionalProperties": false
}